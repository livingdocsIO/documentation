title: Get Latest Publication
endpointId: get-latest-publication

apiVersionConstraints:
  eq: v1

history:
  - release: release-2024-03
    version: v1
    description: Added `ignoreComponentConditions` and `componentConditions` query parameters.

description: |
  The endpoint provides an unresolved Publication with 4 possible top-level properties:
  - systemdata
  - metadata
  - content
  - renditions

  ##### Advantages
  - Be able to cache the response, because it only changes on a republish (does not contain resolved refs)
  - Useful for a pull architecture
  - (deprecated) Supports the Render Pipeline with it's Renditions

  ##### Related
  - [Composition API]({{< ref "/reference/public-api/composition-api" >}})

useCases: |
  -  Load an unresolved Publication with the required information to render a document/page.
  -  Export the unresolved Publication to another system and get changes via [Publication Events]({{< ref "/reference/public-api/publications/publication-events" >}}) or [Webhooks]({{< ref "/reference/webhooks" >}})
  -  (deprecated) Provides a Publication via a [Rendition]({{< ref "/reference/project-config/content-types#renditions" >}}) for a delivery in another format like `RSS`, `XML`

scopes: public-api:read
query: |
  ACCESS_TOKEN=ey1234
  curl -k -X GET "https://server.livingdocs.io/api/:apiVersion/documents/{documentId}/latestPublication" \
    -H "Authorization: Bearer $ACCESS_TOKEN"
endpoint:
  method: GET
  path: /api/:apiVersion/documents/{documentId}/latestPublication
parameters:
  - name: documentId
    type: integer
    required: true
    notes: ''
  - name: ?fields
    type: string
    required: false
    notes: 'Filters which (comma separated) properties are included in the response. Defaults to `systemdata,metadata,content`.'
  - name: ?renditions
    type: string
    required: false
    notes: |
      A comma-separated list of rendition handles.

      Example: `?renditions=web,json`

  - name: ?ignoreComponentConditions
    type: boolean
    required: false
    notes: |
      {{< added-in \"release-2024-03\" >}}

      Provides a way to opt out of component filtering and return all content regardless of whether each component passes the conditional checks.

      Default: `false`

  - name: ?componentConditions
    type: string
    required: false
    notes: |
      {{< added-in \"release-2024-03\" >}}

      JSON stringified object which contains the component conditions you would like to apply.

      Default: `{"dateTime": new Date()}`  
      Example: `?componentConditions={"dateTime":"2024-02-14T17:25:10.391Z"}`
responses:
  - code: '200'
    body: |
      {
        "systemdata": {
          "projectId": 1,
          "channelId": 1,
          "documentId": 1,
          "contentType": "regular",
          "documentType": "article",
          "publicationId": 1,
          "firstPublicationDate": "2022-03-16T14:08:11:000Z",
          "significantPublicationDate": "2022-10-26T07:25:00.000Z",
          "visiblePublicationDate": "2022-10-27T06:00:00.000Z",
          "lastPublicationDate": "2023-03-18T16:32:04.170Z",
          "design": {
            "name": "timeline",
            "version": "1.1.0"
          }
        },
        "metadata": {
          "title": "a title",
          "description": "some lead",
          "dependencies": {}
        },
        "content": [
          {
            "id": "doc-1b8i1ksh10",
            "component": "head",
            "identifier": "timeline.head",
            "content": {
              "title": "a title",
              "text": "some lead"
            }
          },
          {
            "id": "doc-1b8i1ksh20",
            "component": "normal",
            "identifier": "timeline.normal",
            "content": {
              "caption": "my caption"
            },
            "styles": {
              "position": "left"
            }
          },
          {
            "id": "doc-1b8i1ksh30",
            "component": "p",
            "identifier": "timeline.p",
            "content": {
              "text": "first paragraph"
            }
          },
          {
            "id": "doc-1b8i1me1d0",
            "component": "p",
            "identifier": "timeline.p",
            "content": {
              "text": "second paragraph"
            }
          }
        ],
        "renditions": [
          {
            "handle": "web",
            "content": "<div class=\"head\">\n  <h1>a title</h1>\n  <p class=\"lead\">some lead</p>\n</div>\n<figure class=\"aspect-ratio left\">\n  <img class=\"doc-image-empty\" src=\"data:image/svg+xml;charset=UTF-8,…\">\n  <figcaption>my caption</figcaption>\n</figure>\n<p>first paragraph</p>\n<p>second</p>\n<p> and third one. :)</p>"
          },
          {
            "handle": "mobile",
            "content": {
              "content": [
                {
                  "id": "doc-1b8i1ksh10",
                  "component": "head",
                  "identifier": "timeline.head",
                  "content": {
                    "title": "a title",
                    "text": "some lead"
                  }
                },
                {
                  "id": "doc-1b8i1ksh20",
                  "component": "normal",
                  "identifier": "timeline.normal",
                  "content": {
                    "caption": "my caption"
                  },
                  "styles": {
                    "position": "left"
                  }
                },
                {
                  "id": "doc-1b8i1ksh30",
                  "component": "p",
                  "identifier": "timeline.p",
                  "content": {
                    "text": "first paragraph"
                  }
                },
                {
                  "id": "doc-1b8i1me1d0",
                  "component": "p",
                  "identifier": "timeline.p",
                  "content": {
                    "text": "second paragraph"
                  }
                }
              ],
              "design": {
                "name": "timeline",
                "version": "1.1.0"
              }
            }
          },
          {
            "handle": "app",
            "error": {
              "message": "Processing of Channel 'app' for document '1' failed. Detailed error message…"
            }
          }
        ]
      }

openapi:
  security:
    - bearerAuth:
        - public-api:read
  tags:
    - Publications
  operationId: getLatestPublicationForDocument
  summary: Latest Publication
  description: 'The response is a JSON object with 4 possible top-level properties:
    systemdata, metadata, content, renditions'
  parameters:
    - name: documentId
      schema:
        type: integer
      in: path
      required: true
    - name: fields
      description: Filters which (comma separated) properties are included in the
        response.
      schema:
        type: string
      examples:
        allFields:
          value: systemdata,metadata,content,renditions
      in: query
    - name: renditions
      description: 'A comma-separated list of rendition handles. Example: ?renditions=web,json'
      schema:
        type: string
      examples:
        webAndJson:
          value: web,json
      in: query
    - name: ignoreComponentConditions
      description: Provides a way to opt out of component filtering and return all content regardless of whether each component passes the conditional checks.
      in: query
      schema:
        type: boolean
      examples:
        default:
          value: false
    - name: componentConditions
      description: JSON stringified object which contains the component conditions you would like to apply.
      in: query
      schema:
        type: string
      examples:
        atASpecificTime:
          value: '{"dateTime":"2024-02-14T17:25:10.391Z"}'
  responses:
    '200':
      description: ok
      content:
        application/json:
          schema:
            type: object
            properties:
              systemdata:
                '$ref': '#/components/schemas/Systemdata'
              metadata:
                '$ref': '#/components/schemas/Metadata'
              content:
                '$ref': '#/components/schemas/Content'
              renditions:
                '$ref': '#/components/schemas/Renditions'
          examples:
            success:
              value:
                systemdata:
                  projectId: 1
                  channelId: 1
                  documentId: 1
                  contentType: article
                  documentType: article
                  publicationId: 1
                  firstPublicationDate: '2022-03-16T14:08:11.000Z'
                  significantPublicationDate: '2022-10-26T07:25:00.000Z'
                  visiblePublicationDate: '2022-10-27T06:00:00.000Z'
                  updatedAt: '2023-03-18T16:32:04.170Z'
                  layout: regular
                  design:
                    name: timeline
                    version: 1.1.0
                metadata:
                  title: a title
                  description: some lead
                  dependencies: {}
                content:
                  - id: doc-1b8i1ksh10
                    identifier: timeline.head
                    component: head
                    content:
                      title: a title
                      text: some lead
                  - id: doc-1b8i1ksh20
                    identifier: timeline.normal
                    component: normal
                    content:
                      caption: my caption
                    styles:
                      position: left
                  - id: doc-1b8i1ksh30
                    identifier: timeline.p
                    component: p
                    content:
                      text: first paragraph
                  - id: doc-1b8i1me1d0
                    identifier: timeline.p
                    component: p
                    content:
                      text: second paragraph
                renditions:
                  - handle: web
                    content: |-
                      <div class="head">
                        <h1>a title</h1>
                        <p class="lead">some lead</p>
                      </div>
                      <figure class="aspect-ratio left">
                        <img class="doc-image-empty" src="data:image/svg+xml;charset=UTF-8,…">
                        <figcaption>my caption</figcaption>
                      </figure>
                      <p>first paragraph</p>
                      <p>second</p>
                      <p> and third one. :)</p>
                  - handle: mobile
                    content:
                      content:
                        - id: doc-1b8i1ksh10
                          identifier: timeline.head
                          component: head
                          content:
                            title: a title
                            text: some lead
                        - id: doc-1b8i1ksh20
                          identifier: timeline.normal
                          component: normal
                          content:
                            caption: my caption
                          styles:
                            position: left
                        - id: doc-1b8i1ksh30
                          identifier: timeline.p
                          component: p
                          content:
                            text: first paragraph
                        - id: doc-1b8i1me1d0
                          identifier: timeline.p
                          component: p
                          content:
                            text: second paragraph
                      design:
                        name: timeline
                        version: 1.1.0
                  - handle: app
                    error:
                      message: Processing of Channel 'app' for document '1' failed.
                        Detailed error message…
