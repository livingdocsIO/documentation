title: Get Specific Renditions for a Publication

history:
  - release: release-2024-03
    description: Added `ignoreComponentConditions` and `componentConditions` query parameters.

description: |
  With the Renditions Endpoint you can load different output formats of your publication like `RSS`, `XML`, `HTML` etc. Attention: A rendition is only available if the output format is configured in the [Content Type]({{< ref "/reference/project-config/content-types#renditions" >}}) configuration.

  #### Related
  - [Latest Publication API]({{< ref "/reference/public-api/publications/latest-publication" >}})
  - [Latest Publication API Beta]({{< ref "/reference/public-api/publications/latest-publication-beta" >}})
  - [Composition API]({{< ref "/reference/public-api/composition-api" >}})

useCases: |
  - Provides a Publication for a delivery in another format like `RSS`, `XML` (so called `Rendition`)

scopes: public-api:read
query: |
  ACCESS_TOKEN=ey1234
  curl -k -X GET "https://server.livingdocs.io/api/:apiVersion/documents/{documentId}/latestPublication/renditions/{renditionHandles}" \
    -H "Authorization: Bearer $ACCESS_TOKEN"
endpoint:
  method: GET
  path: /api/:apiVersion/documents/{documentId}/latestPublication/renditions/{renditionHandles}
parameters:
  - name: renditionHandles
    type: string
    required: true
    notes: 'A comma-separated list of renditions handles, e.g. "web,name"'
  - name: ?ignoreComponentConditions
    type: boolean
    required: false
    notes: |
      {{< added-in "release-2024-03" >}}

      Provides a way to opt out of component filtering and return all content regardless of whether each component passes the conditional checks.

      Default: `false`
  - name: ?componentConditions
    type: string
    required: false
    notes: |
      {{< added-in "release-2024-03" >}}

      JSON stringified object which contains the component conditions you would like to apply.

      Default: `dateTime: new Date()`  
      Example: `?componentConditions={"dateTime":"2024-02-14T17:25:10.391Z"}`

responses:
  - code: '200'
    body: |
      [
        {
          "handle": "web",
          "content": "<div class=\"head\">\n  <h1>a title</h1>\n  <p class=\"lead\">some lead</p>\n</div>\n<figure class=\"aspect-ratio left\">\n  <img class=\"doc-image-empty\" src=\"data:image/svg+xml;charset=UTF-8,…\">\n  <figcaption>my caption</figcaption>\n</figure>\n<p>first paragraph</p>\n<p>second</p>\n<p>and third one. :)</p>"
        },
        {
          "handle": "mobile",
          "content": [
            {
              "id": "doc-1b8i1ksh10",
              "component": "head",
              "identifier": "timeline.head",
              "content": {
                "title": "a title",
                "text": "some lead"
              }
            },
            {
              "id": "doc-1b8i1ksh20",
              "component": "normal",
              "identifier": "timeline.normal",
              "content": {
                "caption": "my caption"
              },
              "styles": {
                "position": "left"
              }
            },
            {
              "id": "doc-1b8i1ksh30",
              "component": "p",
              "identifier": "timeline.p",
              "content": {
                "text": "first paragraph"
              }
            },
            {
              "id": "doc-1b8i1me1d0",
              "component": "p",
              "identifier": "timeline.p",
              "content": {
                "text": "second paragraph"
              }
            }
          ],
          "design": {
            "name": "timeline",
            "version": "1.1.0"
          }
        },
        {
          "handle": "app",
          "error": {
            "message": "Processing of Channel 'app' for document '1' failed. Detailed error message…"
          }
        }
      ]

openapi:
  security:
    - bearerAuth:
        - public-api:read
  tags:
    - Publications
  operationId: getDocumentRendition
  summary: Get Specific Renditions for a Publication
  description: |-
    **Upcoming Deprecation**

    Please note that we’re working on offering a better alternative to the renditions with the `Composition API`.

    If you need the HTML for a document you can use the `Composition API` and pass the field `html`.

    **Required Server Configuration**

    Renditions are only available if configured in the contentType configuration.
  parameters:
    - name: renditionHandles
      description: A comma-separated list of renditions handles, e.g. `web,name`.
      schema:
        type: string
      in: path
      required: true
      examples:
        renditionHandles:
          value: web,name
    - name: documentId
      schema:
        type: integer
      in: path
      required: true
  responses:
    '200':
      description: ok
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
          examples:
            success:
              value:
                - handle: web
                  content: |-
                    <div class="head">
                      <h1>a title</h1>
                      <p class="lead">some lead</p>
                    </div>
                    <figure class="aspect-ratio left">
                      <img class="doc-image-empty" src="data:image/svg+xml;charset=UTF-8,…">
                      <figcaption>my caption</figcaption>
                    </figure>
                    <p>first paragraph</p>
                    <p>second</p>
                    <p>and third one. :)</p>
                - handle: mobile
                  content:
                    - id: doc-1b8i1ksh10
                      identifier: timeline.head
                      component: head
                      content:
                        title: a title
                        text: some lead
                    - id: doc-1b8i1ksh20
                      identifier: timeline.normal
                      component: normal
                      content:
                        caption: my caption
                      styles:
                        position: left
                    - id: doc-1b8i1ksh30
                      identifier: timeline.p
                      component: p
                      content:
                        text: first paragraph
                    - id: doc-1b8i1me1d0
                      identifier: timeline.p
                      component: p
                      content:
                        text: second paragraph
                  design:
                    name: timeline
                    version: 1.1.0
                - handle: app
                  error:
                    message: Processing of Channel 'app' for document '1' failed.
                      Detailed error message…
