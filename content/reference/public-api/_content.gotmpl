<!-- To iterate over a map
  range (sort $.Site.Data.endpoints)
 -->
{{ $buildNoRender := dict "render" "never" }}

{{ $endpoints := slice }}

{{ $upcoming := slice }}
{{ range where (sort $.Site.Data.releases) "upcoming" "eq" true }}
  {{ $upcoming = $upcoming | append (slicestr .key 8) }}
{{ end }}

{{ range $key, $value := $.Site.Data.endpoints }}
  {{ if not $value.apiVersion }}
    {{ $value = merge $value (dict "apiVersion" (dict "neq" "beta")) }}
  {{ end }}

  {{ if not $.Site.BuildDrafts }}
    {{ if and $value.apiVersion.eq (in $upcoming $value.apiVersion.eq) }}{{ continue }}{{ end }}
    {{ if and $value.apiVersion.gt (in $upcoming $value.apiVersion.gt) }}{{ continue }}{{ end }}
    {{ if and $value.apiVersion.gte (in $upcoming $value.apiVersion.gte) }}{{ continue }}{{ end }}
  {{ end }}

  {{ $stat := os.Stat (printf "data/endpoints/%s.yaml" $key) }}
  {{ $endpoint := merge $value (dict "endpointId" (or $value.endpointId $key) "hidden" true "endpointFile" $key) }}
  {{ $endpoints = $endpoints | append $endpoint }}

  {{ $.AddPage (dict
    "title" .title
    "kind" "page"
    "type" "api-endpoint"
    "dates" (dict "lastmod" $stat.ModTime)
    "weight" .weight
    "path" (printf "endpoint/%s" $key)
    "content" (dict "mediaType" "text/markdown" "value" "")
    "params" $endpoint
    "sitemap" (dict "disable" true)
    )
  }}
{{ end }}

{{ $sectionsStat := os.Stat "data/sections.yaml" }}
{{ range $.Site.Data.sections }}
  <!-- warnf (string (. | jsonify)) -->
  <!-- warnf (string .title) -->

  {{ $sectionEndpoints := slice }}
  {{ range .endpoints }}
    {{ $sectionEndpoints = $sectionEndpoints | append (where $endpoints "endpointId" "eq" .) }}
  {{ end }}
  {{ $params := merge . (dict "endpoints" $sectionEndpoints) }}

  {{ $.AddPage (dict
    "title" .title
    "kind" (or .kind "page")
    "type" "api-reference-section"
    "dates" (dict "lastmod" $sectionsStat.ModTime)
    "weight" .weight
    "path" (or .path .title)
    "content" (dict "mediaType" "text/markdown" "value" "")
    "params" $params)
  }}
{{ end }}
